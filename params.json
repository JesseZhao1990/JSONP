{
  "name": "Jsonp",
  "tagline": "总结JSONP",
  "body": "#JSONP\r\n\r\n要了解jsonp.首先要了解同源策略，什么是同源策略呢？\r\n\r\n##同源策略(Same Origin Policy)\r\n\r\n浏览器出于安全方面的考虑，只允许与同域下的接口交互。\r\n也就是说javascript只可以操作自己域下的东西，不能操作其他域下的东西。比如百度下javascript是不可操作谷歌下的页面。\r\n\r\n###同域指的是？\r\n\r\n同协议：如都是http或者https\r\n\r\n同域名：如都是baidu.com\r\n\r\n同端口：如都是80端口\r\n\r\n比如： 用户打开了 页面: http://baidu.com， 当前页面下的 js 向 http://baidu.com/xxx 的接口发 ajax 请求，浏览器是允许的。但假如向: http://google.com/xxx 发ajax请求则会被浏览器阻止掉。\r\n\r\n###那 JSONP是什么呢？\r\n\r\nHTML 中 script 标签可以加载其他域下的js，比如我们经常引入一个其他域下线上cdn的jQuery。那如何利用这个特性实现从其他域下获取数据呢？\r\n\r\n这样试试：\r\n```\r\n<script src=\"http://api.jirengu.com/weather.php?callback=showData\"></script>\r\n\r\n```\r\n\r\n这个请求到达后端后，后端会去解析callback这个参数获取到字符串showData，在发送数据做如下处理：\r\n\r\n```\r\n之前后端返回数据： {\"city\": \"hangzhou\", \"weather\": \"晴天\"}\r\n现在后端返回数据： showData({\"city\": \"hangzhou\", \"weather\": \"晴天\"})\r\n\r\n```\r\n\r\n前端script标签在加载数据后会把 「showData({\"city\": \"hangzhou\", \"weather\": \"晴天\"})」做为 js 来执行，这实际上就是调用showData这个函数，同时参数是 {\"city\": \"hangzhou\", \"weather\": \"晴天\"}。\r\n\r\n用户只需要在加载提前在页面定义好showData这个全局函数，在函数内部处理参数即可。\r\n\r\n```\r\n<script>\r\n    function showData(ret){\r\n        console.log(ret);\r\n    }\r\n</script>\r\n<script src=\"http://api.jirengu.com/weather.php?callback=showData\"></script>\r\n\r\n```\r\n\r\n「原来这就是 JSONP(JSON with padding)，总结一下：」\r\n1. JSONP是通过 script 标签加载数据的方式去获取数据当做 JS 代码来执行\r\n\r\n2. 提前在页面上声明一个函数，函数名通过接口传参的方式传给后台，后台解析到函数名后在原始数据上「包裹」这个函数名，发送给前端。换句话说，JSONP 需要对应接口的后端的配合才能实现。\r\n\r\n\r\n原理很简单，但用起来代码好丑陋，做个封装如何？\r\n\r\n```\r\n\r\nfunction jsonp(setting){\r\n  setting.data = setting.data || {}\r\n  setting.key = setting.key||'callback'\r\n  setting.callback = setting.callback||function(){} \r\n  setting.data[setting.key] = '__onGetData__'\r\n\r\n  window.__onGetData__ = function(data){\r\n    setting.callback (data);\r\n  }\r\n\r\n  var script = document.createElement('script')\r\n  var query = []\r\n  for(var key in setting.data){\r\n    query.push( key + '='+ encodeURIComponent(setting.data[key]) )\r\n  }\r\n  script.src = setting.url + '?' + query.join('&')\r\n  document.head.appendChild(script)\r\n  document.head.removeChild(script)\r\n\r\n}\r\n\r\njsonp({\r\n  url: 'http://api.jirengu.com/weather.php',\r\n  callback: function(ret){\r\n    console.log(ret)\r\n  }\r\n})\r\n\r\njsonp({\r\n  url: 'http://photo.sina.cn/aj/index',\r\n  key: 'jsoncallback',\r\n  data: {\r\n    page: 1,\r\n    cate: 'recommend'\r\n  },\r\n  callback: function(ret){\r\n    console.log(ret)\r\n  }\r\n})\r\n\r\n```\r\n演示地址：[点击开始演示](http://codepen.io/zhaojianxin/pen/KgXoAG?editors=0011)\r\n\r\n文章来源：\r\n\r\n1.https://zhuanlan.zhihu.com/p/22600501\r\n\r\n2.http://blog.csdn.net/navy_xue/article/details/40016453\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}